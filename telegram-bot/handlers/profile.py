from aiogram import F, Router, Dispatcher
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.fsm.context import FSMContext

# –†–æ—É—Ç–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
router = Router()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
def create_profile_back_keyboard(language: str):
    if language == "russian":
        return InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back_to_main_menu")]
            ]
        )
    elif language == "english":
        return InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text="Back", callback_data="back_to_main_menu")]
            ]
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç"
@router.callback_query(F.data.startswith("profile_"))
async def show_profile(query: CallbackQuery):
    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —è–∑—ã–∫–∞ –∏–∑ callback_data
    language = query.data.split("_")[1]  # "rus" –∏–ª–∏ "eng"

    # –ü–æ–ª—É—á–µ–Ω–∏–µ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_mention = f"@{query.from_user.username}" if query.from_user.username else query.from_user.full_name

    # –¢–µ–∫—Å—Ç –ø—Ä–æ—Ñ–∏–ª—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —è–∑—ã–∫–∞
    if language == "rus":
        await query.message.answer(f"üßë‚Äçüíª –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_mention}\n\n" 
                                   f"üîç –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫: –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–≤–µ—Ä–æ–∫ –¥–æ 1 –Ω–æ—è–±—Ä—è 2025 –≥.\n\n"
                                   f"üìã –¢–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω: \"–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫\" –¥–æ 1 –Ω–æ—è–±—Ä—è 2025",
                                   reply_markup=create_profile_back_keyboard("russian")
        )
    elif language == "eng":
        await query.message.answer(f"üßë‚Äçüíª Username: {user_mention}\n\n" 
                                   f"üîç Available checks: unlimited checks until November 1, 2025.\n\n"
                                   f"üìã Plan: \"Developer\" until November 1, 2025.",
                                   reply_markup=create_profile_back_keyboard("english")
        )

    # –°–∫—Ä—ã—Ç–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞
    await query.message.edit_reply_markup(reply_markup=None)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
@router.callback_query(F.data == "back_to_main_menu")
async def back_to_main_menu(query: CallbackQuery, state: FSMContext):
    
    data = await state.get_data()
    selected_language = data.get("selected_language", "russian")

    # –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    from handlers.main_menu import show_main_menu
    await show_main_menu(query.message, selected_language)
    await query.message.edit_reply_markup(reply_markup=None)

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
def register_profile_handlers(dp: Dispatcher):
    dp.include_router(router)
